version: '3.7'
services:
  postgresql:
    image: postgres:latest
    ports:
      - ${DB_PORT}:5432
    container_name: postgresql
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - demo

  redis:
    image: redis:latest
    ports:
      - ${REDIS_PORT}:6379
    container_name: redis
    restart: always
    hostname: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    volumes:
      - redis_data:/data
    networks:
      - demo

  # frontend:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   container_name: frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   environment:
  #     NEXT_PUBLIC_API_URL: http://backend:8080
  #   restart: unless-stopped

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    image: demo-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_EXPIRATION: ${REDIS_EXPIRATION}
    volumes:
      - ./server/src:/app/src
    restart: unless-stopped
    networks:
      - demo

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      - postgresql
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - demo

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:

networks:
  demo:
    driver: bridge
